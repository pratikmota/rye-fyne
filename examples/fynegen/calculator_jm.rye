rye .needs { fynegen } ; experimenting with some language features, doesn't work yet

not_: ?not

do\in fynegen {

    win: app .window "Calculator"

    for { label-a label-b label-op label-eq label-res } { .set!* label "" }   ; TODO -- make set accept words too [DONE]
    btn-dot: button "." does { }
    btn-copy: button-with-icon "" content-copy-icon does { }
	
    data: context {
        a: b: res: op: ""
        cur: 'a   ; cursor on a or b
        get: does { do [ cur ] }
        set: fn { v } { .change! ?cur }
        res!: fn { v } { .change! 'res }
        cur!: fn { v } { .change! 'cur }
        op!: fn { v } { .change! 'op }
        clear: does { for { a b res op } { .change!* "" } }
		clear1: does { for { b res op } { .change!* "" } }
    }
    
    ui: context {
        sync: does {
            label-a .set-text data/a
            label-b .set-text data/b
            label-res .set-text data/res
            data/op .to-string .third .fix { "" } \set-text* label-op 
        }
        eq!: fn { v } { .set-text* label-eq }
        empty: does { label "" }
    }

	format-decimal: fn1 { .format "%.4f" \trim\ "0." }
	
    change-current-text: fn { f } {
        data/set f data/get , update
    }
    
    num-button: fn { n } {
        button n closure { } {
            change-current-text fn { text } { text + n }
        }
    }

    update: does {
        if data/cur = 'b {
            either any { data/a = "" data/b = "" } {
                data/res! "" , ui/eq! ""
            } {
                do [ data/a .to-decimal data/op  data/b .to-decimal ]
                \format-decimal \data/res! ,
                ui/eq! "="
            }
        }
        ui/sync
    }

    eval: does {
		data/cur! 'a 
		data/set data/res
		ui/eq! ""
		data/clear1 , update
	}
    
    set-op: fn { op } {
        if data/cur = 'b { eval }
        if all { data/cur = 'a  not_ data/a = "" } {
            data/op! first op , data/cur! 'b , ui/sync
        }
    }

    delete-digit: does {
        ^if data/get = "" { data/cur! 'a , data/op! "" , update }
        change-current-text fn { t } {
            length? t |- 1 |head* t :r
            |= "-" \either { "" } { r } 
        }
    }

    negate-current: does {
        change-current-text fn { text } {
            0 - text .to-decimal \fix { 0.0 } \format-decimal
        }
    }

    btn-dot .on-tapped! fn { } {
        change-current-text fn { text } {
            either text = "" {
                "0."
            } {
                either contains text "." { text } { text + "." }
            }
        }
    }

    btn-copy .on-tapped! fn { } {
        if not data/res = "" {
            win .clipboard .set-content data/res
        }
    }
    btn-copy .disable
	
    win \set-content border
    h-box [ label-a label-op label-b label-eq label-res ]
    0 0 0 ; Use 0 for nil
    [ grid-with-columns 4
        unpack [
			btn-copy
            button "C" does { data/cur! 'a , data/clear , ui/eq! "" , update }
            button "Del" does { delete-digit }
            button "+" does { set-op { + } }

            map { "7" "8" "9" } { .num-button }
            button "-" does { set-op { - } }
            
            map { "4" "5" "6" } { .num-button }
            button "*" does { set-op { * } }

            map { "1" "2" "3" } { .num-button }
            button "/" does { set-op { / } }

            button "+/-" does { negate-current  }
            num-button "0"
            btn-dot
            button "=" does { eval }
        ]
    ]
    |resize size 320.0 320.0
    |show-and-run
}
